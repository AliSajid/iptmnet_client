on:
  push:
    branches:
      - main
      - alpha
      - beta


name: Release

env:
  RUST_BACKTRACE: 1
  SEMREL_RUST_VERSION: 1.0.0-alpha.8


jobs:
    release:
        name: Semantic Release
        runs-on: ubuntu-latest
        outputs:
          release_version: ${{steps.semantic.outputs.new_release_version}}
          new_release: ${{steps.semantic.outputs.new_release_published}}
          github_event_data: ${{ steps.payload.outputs.github_event_data }}
        steps:
          - name: Checkout
            uses: actions/checkout@v2
            with:
                fetch-depth: 0
                persist-credentials: false

          - name: Save Event Payload
            id: payload
            run: |
              echo "::set-output name=github_event_data::$(cat $GITHUB_EVENT_PATH | base64)"

          - name: Install Python
            uses: actions/setup-python@v4
            with:
              python-version: '3.10'

          - name: install commitizen
            run: pip install -U commitizen

          - name: Install Rust Stable
            uses: actions-rs/toolchain@v1
            with:
                profile: minimal
                toolchain: stable
                override: true

          # The release build is used in the Semantic Release step
          - name: Build
            uses: actions-rs/cargo@v1
            with:
                command: build
                args: --release

          - name: Install Semantic Release Rust
            run: cargo install semantic-release-rust --version ${{ env.SEMREL_RUST_VERSION }}

          - name: Semantic Release
            uses: cycjimmy/semantic-release-action@v2
            id: semantic
            with:
                semantic_version: 17.1.1
                extra_plugins: |
                    @semantic-release/exec@5.0
                    @semantic-release/git@9.0
            env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                CARGO_REGISTRY_TOKEN: ${{ secrets.SEMREL_CRATES_IO }}

    upload_binaries:
        name: Upload Binaries
        runs-on: ubuntu-latest
        needs: release
        if: needs.release.outputs.new_release == 'true'
        env:
          new_release_version: ${{needs.release.outputs.release_version}}
          github_event_data: ${{needs.release.outputs.github_event_data}}
        strategy:
          fail-fast: false
          matrix:
            include:
              - target: x86_64-pc-windows-gnu
                archive: zip
                platform: windows_x86_64
              - target: x86_64-unknown-linux-musl
                archive: tar.gz tar.bz2 tar.xz
                platform: linux_x86_64
              - target: x86_64-apple-darwin
                archive: zip
                platform: macos_x86_64
        steps:
          - name: Checkout
            uses: actions/checkout@v2
            with:
                fetch-depth: 0
                persist-credentials: false

          - name: Install Rust Stable
            uses: actions-rs/toolchain@v1
            with:
                profile: minimal
                toolchain: stable
                override: true

          - name: Create the event file
            run: |
              echo $github_event_data | base64 -d > /tmp/github_event.json
              echo "GITHUB_EVENT_PATH=/tmp/github_event.json" >> $GITHUB_ENV

          - name: Install Python
            uses: actions/setup-python@v4
            with:
              python-version: '3.10'

          - name: Compile and release
            uses: rust-build/rust-build.action@v1.3.2
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            with:
              MINIFY: true
              RUSTTARGET: ${{ matrix.target }}
              ARCHIVE_TYPES: ${{ matrix.archive }}
              PRE_BUILD: meta/build.sh
              ARCHIVE_NAME: IPTMNet-CLI-${{ env.new_release_version }}-${{matrix.platform}}
              EXTRA_FILES: "README.md LICENSE"
